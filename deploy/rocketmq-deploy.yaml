# 创建rocketmq nameserver deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: fraudapp
  name: rocketmq-nameserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rocketmq-nameserver
  template:
    metadata:
      labels:
        app: rocketmq-nameserver
    spec:
      containers:
        - name: nameserver
          image: swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/apache/rocketmq:5.3.2
          command: ["/bin/sh", "-c"]
          args:
            - /home/rocketmq/rocketmq-5.3.2/bin/mqnamesrv
          resources:
            limits:
              cpu: '2'
              memory: 4Gi
            requests:
              cpu: '1'
              memory: 2Gi
          ports:
            - containerPort: 9876
          readinessProbe:
            tcpSocket:
              port: 9876
            initialDelaySeconds: 10
            periodSeconds: 5

# rocketmq-nameserver service
---
apiVersion: v1
kind: Service
metadata:
  namespace: fraudapp
  name: rocketmq-nameserver
spec:
  type: NodePort
  selector:
    app: rocketmq-nameserver
  ports:
    - port: 9876
      targetPort: 9876
      nodePort: 30976


# create rocketmq-broker deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: fraudapp
  name: rocketmq-broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rocketmq-broker
  template:
    metadata:
      labels:
        app: rocketmq-broker
    spec:
      containers:
        - name: broker
          image: swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/apache/rocketmq:5.3.2
          command: ["/bin/sh", "-c"]
          args:
            - /home/rocketmq/rocketmq-5.3.2/bin/mqbroker -n rocketmq-nameserver:9876 -c /home/rocketmq/rocketmq-5.3.2/conf/broker.conf autoCreateTopicEnable=true
          ports:
            - containerPort: 10909
            - containerPort: 10911
          env:
            - name: NAMESRV_ADDR
              value: rocketmq-nameserver:9876
          resources:
            limits:
              cpu: '2'
              memory: 4Gi
            requests:
              cpu: '2'
              memory: 4Gi
          readinessProbe:
            tcpSocket:
              port: 10911
            initialDelaySeconds: 15
            periodSeconds: 5


# rocketmq rocketmq-broker service
---
apiVersion: v1
kind: Service
metadata:
  namespace: fraudapp
  name: rocketmq-broker
spec:
  type: NodePort
  selector:
    app: rocketmq-broker
  ports:
    - name: remoting
      port: 10911
      targetPort: 10911
      nodePort: 30911
    - name: ha
      port: 10909
      targetPort: 10909
      nodePort: 30909


#rocketmq dashboard deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rocketmq-dashboard
  name: rocketmq-dashboard
  namespace: fraudapp
spec:
  selector:
    matchLabels:
      app: rocketmq-dashboard
  template:
    metadata:
      labels:
        app: rocketmq-dashboard
    spec:
      containers:
        - env:
            - name: TZ
              value: Asia/Shanghai
            - name: JAVA_OPTS
              value: >-
                -Drocketmq.namesrv.addr=rocketmqnamesrv:9876
                -Dcom.rocketmq.sendMessageWithVIPChannel=false
          image: swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/apacherocketmq/rocketmq-dashboard:2.0.1
          imagePullPolicy: IfNotPresent
          name: rocketmq-dashboard
          resources:
            limits:
              cpu: '1'
              memory: 1Gi
            requests:
              cpu: '1'
              memory: 1Gi
          livenessProbe:
            tcpSocket:
              port: 8080
      dnsPolicy: ClusterFirst
      restartPolicy: Always

# rocketmq dashboard service
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    k8s.kuboard.cn/workload: rocketmq-dashboard
  labels:
    app: rocketmq-dashboard
  name: rocketmq-dashboard
  namespace: fraudapp
spec:
  ports:
    - name: port
      nodePort: 30880
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: rocketmq-dashboard
  type: NodePort